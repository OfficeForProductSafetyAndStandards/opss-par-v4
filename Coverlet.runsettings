<?xml version="1.0" encoding="utf-8"?>
<!-- File name extension must be .runsettings -->
<RunSettings>
	<DataCollectionRunSettings>
		<DataCollectors>
			<DataCollector friendlyName="XPlat Code Coverage">
				<Configuration>
					<CodeCoverage>
						<Format>cobertura</Format>
						<!--
Additional paths to search for .pdb (symbol) files. Symbols must be found for modules to be instrumented.
If .pdb files are in the same folder as the .dll or .exe files, they are automatically found. Otherwise, specify them here.
Note that searching for symbols increases code coverage runtime. So keep this small and local.
-->
						<!--
            <SymbolSearchPaths>
                   <Path>C:\Users\username\source\repos\ProjectX</Path>
                   <Path>\\mybuildshare\builds\ProjectX</Path>
            </SymbolSearchPaths>
-->

						<!--
About include/exclude lists:
Empty "Include" clauses imply all; empty "Exclude" clauses imply none.
Each element in the list is a regular expression (ECMAScript syntax). See /visualstudio/ide/using-regular-expressions-in-visual-studio.
An item must first match at least one entry in the include list to be included.
Included items must then not match any entries in the exclude list to remain included.
-->

						<!-- Match assembly file paths: -->
						<ModulePaths>
							<Include>
								<ModulePath>.*Opss.*</ModulePath>
							</Include>
							<Exclude>
								<ModulePath>.*moq.dll</ModulePath>
								<ModulePath>.*unittests.dll</ModulePath>
								<ModulePath>.*integrationtests.dll</ModulePath>
								<ModulePath>.*bunit.dll</ModulePath>
							</Exclude>
						</ModulePaths>
						
						<!-- Match fully qualified names of functions: -->
						<!-- (Use "\." to delimit namespaces in C# or Visual Basic, "::" in C++.)  -->
						<Functions>
							<Exclude>
								<Function>^Opss\.PrimaryAuthorityRegister\.Api\.Persistence\.Migrations\..*</Function>
								<Function>^Opss\.PrimaryAuthorityRegister\.Web\.Pages\..*</Function>
								<Function>^AspNetCoreGeneratedDocument.*</Function>
								<Function>^Opss\.PrimaryAuthorityRegister\.Api\.Application\.Extensions\.IServiceCollectionExtensions\.GenerateTempIdentity</Function>
							</Exclude>
						</Functions>

						<!-- We recommend you do not change the following values: -->

						<!-- Set this to True to collect coverage information for functions marked with the "SecuritySafeCritical" attribute. Instead of writing directly into a memory location from such functions, code coverage inserts a probe that redirects to another function, which in turns writes into memory. -->
						<UseVerifiableInstrumentation>True</UseVerifiableInstrumentation>
						<!-- When set to True, collects coverage information from child processes that are launched with low-level ACLs, for example, UWP apps. -->
						<AllowLowIntegrityProcesses>True</AllowLowIntegrityProcesses>
						<!-- When set to True, collects coverage information from child processes that are launched by test or production code. -->
						<CollectFromChildProcesses>True</CollectFromChildProcesses>
						<!-- When set to True, restarts the IIS process and collects coverage information from it. -->
						<CollectAspDotNet>False</CollectAspDotNet>
						<!-- When set to True, static native instrumentation will be enabled. -->
						<EnableStaticNativeInstrumentation>True</EnableStaticNativeInstrumentation>
						<!-- When set to True, dynamic native instrumentation will be enabled. -->
						<EnableDynamicNativeInstrumentation>True</EnableDynamicNativeInstrumentation>
						<!-- When set to True, instrumented binaries on disk are removed and original files are restored. -->
						<EnableStaticNativeInstrumentationRestore>True</EnableStaticNativeInstrumentationRestore>

					</CodeCoverage>
				</Configuration>
			</DataCollector>
		</DataCollectors>
	</DataCollectionRunSettings>
</RunSettings>
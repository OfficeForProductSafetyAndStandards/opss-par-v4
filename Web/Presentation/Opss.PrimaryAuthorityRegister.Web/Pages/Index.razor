@page "/"

@using Opss.PrimaryAuthorityRegister.Common.Requests.Test.Commands
@using Opss.PrimaryAuthorityRegister.Common.Requests.Test.Queries.Dtos
@using Opss.PrimaryAuthorityRegister.Common.Requests.Test.Queries

@inject HttpClient _httpClient

<PageTitle>Index</PageTitle>

<h1>Hello, world! @data?.Id.ToString()</h1>

@data?.Data

<button @onclick=@OnPostClick>
    Try Post
</button>

<button @onclick=@OnPutClick>
	Try Put
</button>

<button @onclick=@OnGetClick>
    Try Get
</button>

@status?.ToString()

@code {
    private TestDataDto? data;
    private System.Net.HttpStatusCode? status;

    protected async void OnPostClick()
    {
        var ok = await _httpClient.PostAsync(new CreateTestDataCommand("Something"));
        status = ok.StatusCode;

        var id = ok.Result.Id;

        var result = await _httpClient.GetAsync<GetTestDataQuery, TestDataDto>(new GetTestDataQuery(id));
        data = result.Result;

        StateHasChanged();
    }

    protected async void OnGetClick()
    {
        ArgumentNullException.ThrowIfNull(data);

        var result = await _httpClient.GetAsync<GetTestDataQuery, TestDataDto>(new GetTestDataQuery(data.Id));
        data = result.Result;

        StateHasChanged();
    }

    protected async void OnPutClick()
    {
        ArgumentNullException.ThrowIfNull(data);

        var ok = await _httpClient.PutAsync(new UpdateTestDataCommand(data.Id, "Something new"));
        status = ok.StatusCode;

        StateHasChanged();
    }
}
